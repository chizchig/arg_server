name: ArgoCD Deploy

on:
  push:
    branches:
      - master
  pull_request:

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
          kubectl version --client

      - name: Install ArgoCD CLI
        run: |
          curl -sSL -o argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          sudo install -m 555 argocd /usr/local/bin/argocd
          rm argocd
          argocd version --client

      - name: Authenticate with ArgoCD
        env:
          ARGOCD_SERVER: ${{ secrets.ARGOCD_SERVER }}
          ARGOCD_USERNAME: ${{ secrets.ARGOCD_USERNAME }}
          ARGOCD_PASSWORD: ${{ secrets.ARGOCD_PASSWORD }}
        run: |
          echo "Attempting to login to ArgoCD..."
          if ! argocd login "$ARGOCD_SERVER" \
            --username "$ARGOCD_USERNAME" \
            --password "$ARGOCD_PASSWORD" \
            --insecure; then
            echo "ArgoCD login failed"
            exit 1
          fi
          echo "Login successful"
          argocd version


      - name: Sync Application
        run: |
          if ! argocd app sync trivial-dev --prune --self-heal; then
            echo "ArgoCD sync failed"
            exit 1
          fi
          echo "Sync completed successfully"

      - name: Wait for Sync
        run: |
          if ! argocd app wait trivial-dev --health --timeout 300; then
            echo "ArgoCD wait failed or timed out"
            exit 1
          fi
          echo "Application is healthy and fully synced"

      - name: Verify Deployment
        run: |
          argocd app get trivial-dev
          kubectl get pods -n argocd
          echo "Deployment verification completed"