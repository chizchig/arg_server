name: ArgoCD Deploy

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Configure kubectl
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        run: |
          mkdir -p $HOME/.kube
          echo "$KUBE_CONFIG" | base64 -d > $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      - name: Get ArgoCD API Token
        env:
          ARGOCD_USERNAME: ${{ secrets.ARGOCD_USERNAME }}
          ARGOCD_PASSWORD: ${{ secrets.ARGOCD_PASSWORD }}
        run: |
          ARGOCD_TOKEN=$(kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d)
          echo "ARGOCD_TOKEN=$ARGOCD_TOKEN" >> $GITHUB_ENV

      - name: Sync ArgoCD Application
        env:
          ARGOCD_SERVER: ${{ secrets.ARGOCD_SERVER }}
        run: |
          APP_NAME="trivial-app"  # Replace with your app name
          curl -sSL -o /dev/null -w "%{http_code}" \
            -H "Authorization: Bearer $ARGOCD_TOKEN" \
            -H "Content-Type: application/json" \
            -X POST \
            "$ARGOCD_SERVER/api/v1/applications/$APP_NAME/sync" \
            -d '{"prune": true, "strategy": {"hook": {"force": true}}}'

      - name: Wait for Sync
        env:
          ARGOCD_SERVER: ${{ secrets.ARGOCD_SERVER }}
        run: |
          APP_NAME="trivial-app"  # Replace with your app name
          for i in {1..30}; do
            STATUS=$(curl -sSL \
              -H "Authorization: Bearer $ARGOCD_TOKEN" \
              "$ARGOCD_SERVER/api/v1/applications/$APP_NAME" \
              | jq -r '.status.sync.status')
            if [ "$STATUS" = "Synced" ]; then
              echo "Application synced successfully"
              exit 0
            fi
            echo "Current sync status: $STATUS. Waiting..."
            sleep 10
          done
          echo "Sync did not complete within the expected time"
          exit 1

      - name: Verify Deployment
        run: |
          kubectl get pods -n argocd
          echo "Deployment verification completed"